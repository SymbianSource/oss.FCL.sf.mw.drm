EXPORTS
	?AesUnwrapL@OmaCrypto@@SAPAVHBufC8@@ABVTDesC8@@0@Z @ 1 NONAME ; class HBufC8 * OmaCrypto::AesUnwrapL(class TDesC8 const &, class TDesC8 const &)
	?AesWrapL@OmaCrypto@@SAPAVHBufC8@@ABVTDesC8@@0@Z @ 2 NONAME ; class HBufC8 * OmaCrypto::AesWrapL(class TDesC8 const &, class TDesC8 const &)
	?AlgorithmIdToTransportScheme@CmlaCrypto@@SA?AW4TKeyTransportScheme@@ABVTDesC8@@@Z @ 3 NONAME ; enum TKeyTransportScheme CmlaCrypto::AlgorithmIdToTransportScheme(class TDesC8 const &)
	?Base64DecodeL@@YAPAVHBufC8@@ABVTDesC8@@@Z @ 4 NONAME ; class HBufC8 * Base64DecodeL(class TDesC8 const &)
	?Base64EncodeL@@YAPAVHBufC8@@ABVTDesC8@@@Z @ 5 NONAME ; class HBufC8 * Base64EncodeL(class TDesC8 const &)
	?CmlaIpDecryptL@CmlaCrypto@@SAXW4TKeyTransportScheme@@PAVMDrmKeyStorage@@ABVTDesC8@@AAVTDes8@@3@Z @ 6 NONAME ; void CmlaCrypto::CmlaIpDecryptL(enum TKeyTransportScheme, class MDrmKeyStorage *, class TDesC8 const &, class TDes8 &, class TDes8 &)
	?CmlaIpEncryptL@CmlaCrypto@@SAPAVHBufC8@@W4TKeyTransportScheme@@PAVCRSAPublicKey@@ABVTDesC8@@2@Z @ 7 NONAME ; class HBufC8 * CmlaCrypto::CmlaIpEncryptL(enum TKeyTransportScheme, class CRSAPublicKey *, class TDesC8 const &, class TDesC8 const &)
	?DdtExpInvL@CmlaCrypto@@SAPAVHBufC8@@ABVTDesC8@@@Z @ 8 NONAME ; class HBufC8 * CmlaCrypto::DdtExpInvL(class TDesC8 const &)
	?DdtExpL@CmlaCrypto@@SAPAVHBufC8@@ABVTDesC8@@@Z @ 9 NONAME ; class HBufC8 * CmlaCrypto::DdtExpL(class TDesC8 const &)
	?DdtPermInvL@CmlaCrypto@@SAPAVHBufC8@@ABVTDesC8@@@Z @ 10 NONAME ; class HBufC8 * CmlaCrypto::DdtPermInvL(class TDesC8 const &)
	?DdtPermL@CmlaCrypto@@SAPAVHBufC8@@ABVTDesC8@@@Z @ 11 NONAME ; class HBufC8 * CmlaCrypto::DdtPermL(class TDesC8 const &)
	?I2OSPL@OmaCrypto@@SAPAVHBufC8@@AAVRInteger@@@Z @ 12 NONAME ; class HBufC8 * OmaCrypto::I2OSPL(class RInteger &)
	?KdfL@CmlaCrypto@@SAPAVHBufC8@@ABVTDesC8@@@Z @ 13 NONAME ; class HBufC8 * CmlaCrypto::KdfL(class TDesC8 const &)
	?KdfL@OmaCrypto@@SAPAVHBufC8@@ABVTDesC8@@0H@Z @ 14 NONAME ; class HBufC8 * OmaCrypto::KdfL(class TDesC8 const &, class TDesC8 const &, int)
	?Mgf1L@OmaCrypto@@SAPAVHBufC8@@ABVTDesC8@@H@Z @ 15 NONAME ; class HBufC8 * OmaCrypto::Mgf1L(class TDesC8 const &, int)
	?OS2IPL@OmaCrypto@@SA?AVRInteger@@ABVTDesC8@@@Z @ 16 NONAME ; class RInteger OmaCrypto::OS2IPL(class TDesC8 const &)
	?RsaDecryptCmlaL@CmlaCrypto@@SAPAVHBufC8@@PAVMDrmKeyStorage@@ABVTDesC8@@@Z @ 17 NONAME ; class HBufC8 * CmlaCrypto::RsaDecryptCmlaL(class MDrmKeyStorage *, class TDesC8 const &)
	?RsaDecryptL@OmaCrypto@@SAPAVHBufC8@@PAVMDrmKeyStorage@@ABVTDesC8@@@Z @ 18 NONAME ; class HBufC8 * OmaCrypto::RsaDecryptL(class MDrmKeyStorage *, class TDesC8 const &)
	?RsaEncryptCmlaL@CmlaCrypto@@SAPAVHBufC8@@PAVCRSAPublicKey@@ABVTDesC8@@@Z @ 19 NONAME ; class HBufC8 * CmlaCrypto::RsaEncryptCmlaL(class CRSAPublicKey *, class TDesC8 const &)
	?RsaEncryptL@OmaCrypto@@SAPAVHBufC8@@PAVCRSAPublicKey@@ABVTDesC8@@@Z @ 20 NONAME ; class HBufC8 * OmaCrypto::RsaEncryptL(class CRSAPublicKey *, class TDesC8 const &)
	?RsaKemKwsDecryptL@OmaCrypto@@SAXPAVMDrmKeyStorage@@ABVTDesC8@@AAVTDes8@@2@Z @ 21 NONAME ; void OmaCrypto::RsaKemKwsDecryptL(class MDrmKeyStorage *, class TDesC8 const &, class TDes8 &, class TDes8 &)
	?RsaKemKwsEncryptL@OmaCrypto@@SAPAVHBufC8@@PAVCRSAPublicKey@@ABVTDesC8@@1@Z @ 22 NONAME ; class HBufC8 * OmaCrypto::RsaKemKwsEncryptL(class CRSAPublicKey *, class TDesC8 const &, class TDesC8 const &)
	?RsaPssSignHashL@OmaCrypto@@SAPAVHBufC8@@PAVMDrmKeyStorage@@ABVTDesC8@@@Z @ 23 NONAME ; class HBufC8 * OmaCrypto::RsaPssSignHashL(class MDrmKeyStorage *, class TDesC8 const &)
	?RsaPssVerifyHashL@OmaCrypto@@SAHPAVCRSAPublicKey@@ABVTDesC8@@1@Z @ 24 NONAME ; int OmaCrypto::RsaPssVerifyHashL(class CRSAPublicKey *, class TDesC8 const &, class TDesC8 const &)
	?RsaVerifyL@OmaCrypto@@SAPAVHBufC8@@PAVCRSAPublicKey@@ABVTDesC8@@@Z @ 25 NONAME ; class HBufC8 * OmaCrypto::RsaVerifyL(class CRSAPublicKey *, class TDesC8 const &)
	?SupportedAlgorithmsL@CmlaCrypto@@SAHAAV?$RArray@VTPtrC8@@@@@Z @ 26 NONAME ; int CmlaCrypto::SupportedAlgorithmsL(class RArray<class TPtrC8> &)
	?UnwrapL@CmlaCrypto@@SAPAVHBufC8@@ABVTDesC8@@0@Z @ 27 NONAME ; class HBufC8 * CmlaCrypto::UnwrapL(class TDesC8 const &, class TDesC8 const &)
	?WrapL@CmlaCrypto@@SAPAVHBufC8@@ABVTDesC8@@0@Z @ 28 NONAME ; class HBufC8 * CmlaCrypto::WrapL(class TDesC8 const &, class TDesC8 const &)
	?WriteUint32ToBlock@OmaCrypto@@KAXKAAVTDes8@@H@Z @ 29 NONAME ; void OmaCrypto::WriteUint32ToBlock(unsigned long, class TDes8 &, int)
	?DrmAesEncryptL@DrmAesCrypto@@SAPAVHBufC8@@ABVTDesC8@@0H0@Z @ 30 NONAME ; class HBufC8 * DrmAesCrypto::DrmAesEncryptL(class TDesC8 const &, class TDesC8 const &, int, class TDesC8 const &)

